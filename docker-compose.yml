version: '3.4'
services:
  auth:
    image: sleepr-auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file: ./apps/auth/.env
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/auth/node_modules

  # reservations:
  #   image: sleepr-reservations
  #   build:
  #     context: .
  #     dockerfile: ./apps/reservations/Dockerfile
  #     target: development
  #   command: pnpm run start:dev reservations
  #   env_file: ./apps/reservations/.env
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  # payments:
  #   image: sleepr-payments
  #   build:
  #     context: .
  #     dockerfile: ./apps/payments/Dockerfile
  #     target: development
  #   command: pnpm run start:dev payments
  #   env_file: ./apps/payments/.env
  #   ports:
  #     - 3003:3003
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules

  # notifications:
  #   image: sleepr-notifications
  #   build:
  #     context: .
  #     dockerfile: ./apps/notifications/Dockerfile
  #     target: development
  #   command: pnpm run start:dev notifications
  #   env_file: ./apps/notifications/.env
  #   ports:
  #     - 3004:3004 
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  mongo:
    image: mongo:latest
    container_name: my-mongodb
    ports:
      - "27017:27017"  # Map container's port 27017 to host's port 27017
    volumes:
      - C:/mongo/data:/data/db  # Map a local directory to store MongoDB data

  